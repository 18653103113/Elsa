
#官方配置https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter

#datasource配置加不加druid都可以，多一层而已；druid对两个都支持；

#-------------------------------配置数据源信息-------------------------------
#表明使用Druid连接池，springboot自带的连接池是HikariCP，所以在配置数据库连接池的时候一定要指定type
spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
#m数据库驱动，其实Druid可以根据URL自动识别驱动；
spring.datasource.druid.driver_class_name=com.mysql.jdbc.Driver
#数据库连接信息
spring.datasource.druid.url=jdbc:mysql://192.168.101.62:3306/mysql?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
#数据库用户名
spring.datasource.druid.username=root
#数据库密码
spring.datasource.druid.password=Cvicse#2020

#-------------------------------配置连接池的相关属性-------------------------------
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最大连接池数量
spring.datasource.druid.max-active=20
#最小连接池数量
spring.datasource.druid.min-idle=5
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=3000
#是否缓存preparedStatement，也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true；在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=
spring.datasource.druid.max-open-prepared-statements= -1
#验证查询的SQL
#spring.datasource.druid.validation-query=
#spring.datasource.druid.validation-query-timeout=
#spring.datasource.druid.test-on-borrow=
#spring.datasource.druid.test-on-return=
#spring.datasource.druid.test-while-idle=
#配置检测可以关闭的空闲连接间隔时间
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置连接在池中的最小生存时间
spring.datasource.druid.min-evictable-idle-time-millis= 300000
# 配置连接在池中的最大生存时间
spring.datasource.druid.max-evictable-idle-time-millis= 400000



#-------------------------------配置扩展监控插件-------------------------------
#stat：监控统计；log4j：日志；wall：防御sql注入
spring.datasource.druid.filters= stat,wall
#配置_Druid和Spring关联监控配置，Spring监控AOP切入点，如x.y.z.service.*，配置多个英文逗号分隔
spring.datasource.druid.aop-patterns= com.web.springbootdruid.service.*
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat= true
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

#-------------------------------开启stat监控统计插件后进行监控配置WebStatFilter配置-------------------------------
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled= true
#添加过滤规则
spring.datasource.druid.web-stat-filter.url-pattern=/*
#忽略过滤的格式
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#spring.datasource.druid.web-stat-filter.session-stat-enable=
#spring.datasource.druid.web-stat-filter.session-stat-max-count=
#spring.datasource.druid.web-stat-filter.principal-session-name=
#spring.datasource.druid.web-stat-filter.principal-cookie-name=
#spring.datasource.druid.web-stat-filter.profile-enable=


#-------------------------------StatViewServlet配置（Druid内置提供了一个StatViewServlet用于展示Druid的统计信息）-------------------------------
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled= true
#访问路径为/druid时，跳转到StatViewServlet
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否能够重置数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
# 需要账号密码才能访问控制台，默认为root
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
#IP白名单
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
#　IP黑名单（共同存在时，deny优先于allow）
spring.datasource.druid.stat-view-servlet.deny=
